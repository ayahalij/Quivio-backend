"""Initial database setup

Revision ID: b7d17e738165
Revises: 
Create Date: 2025-09-11 21:15:47.200190

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b7d17e738165'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('icon_url', sa.String(length=255), nullable=True),
    sa.Column('criteria_type', sa.String(length=50), nullable=False),
    sa.Column('criteria_value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.create_table('daily_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_text', sa.String(length=500), nullable=False),
    sa.Column('mood_trigger', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_challenges_id'), 'daily_challenges', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_cloudinary_id', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('theme_mode', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('capsules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('recipient_email', sa.String(length=255), nullable=True),
    sa.Column('open_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_opened', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_capsules_id'), 'capsules', ['id'], unique=False)
    op.create_table('diary_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_diary')
    )
    op.create_index(op.f('ix_diary_entries_date'), 'diary_entries', ['date'], unique=False)
    op.create_index(op.f('ix_diary_entries_id'), 'diary_entries', ['id'], unique=False)
    op.create_table('moods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mood_level', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_mood')
    )
    op.create_index(op.f('ix_moods_date'), 'moods', ['date'], unique=False)
    op.create_index(op.f('ix_moods_id'), 'moods', ['id'], unique=False)
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('image_cloudinary_id', sa.String(length=255), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=False),
    sa.Column('location_lat', sa.Float(), nullable=True),
    sa.Column('location_lng', sa.Float(), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_photos_date'), 'photos', ['date'], unique=False)
    op.create_index(op.f('ix_photos_id'), 'photos', ['id'], unique=False)
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'achievement_id', name='_user_achievement')
    )
    op.create_index(op.f('ix_user_achievements_id'), 'user_achievements', ['id'], unique=False)
    op.create_table('capsule_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('capsule_id', sa.Integer(), nullable=False),
    sa.Column('media_cloudinary_id', sa.String(length=255), nullable=False),
    sa.Column('media_url', sa.String(length=500), nullable=False),
    sa.Column('media_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['capsule_id'], ['capsules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_capsule_media_id'), 'capsule_media', ['id'], unique=False)
    op.create_table('user_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('mood_id', sa.Integer(), nullable=True),
    sa.Column('photo_cloudinary_id', sa.String(length=255), nullable=True),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['daily_challenges.id'], ),
    sa.ForeignKeyConstraint(['mood_id'], ['moods.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='_user_date_challenge')
    )
    op.create_index(op.f('ix_user_challenges_date'), 'user_challenges', ['date'], unique=False)
    op.create_index(op.f('ix_user_challenges_id'), 'user_challenges', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_challenges_id'), table_name='user_challenges')
    op.drop_index(op.f('ix_user_challenges_date'), table_name='user_challenges')
    op.drop_table('user_challenges')
    op.drop_index(op.f('ix_capsule_media_id'), table_name='capsule_media')
    op.drop_table('capsule_media')
    op.drop_index(op.f('ix_user_achievements_id'), table_name='user_achievements')
    op.drop_table('user_achievements')
    op.drop_index(op.f('ix_photos_id'), table_name='photos')
    op.drop_index(op.f('ix_photos_date'), table_name='photos')
    op.drop_table('photos')
    op.drop_index(op.f('ix_moods_id'), table_name='moods')
    op.drop_index(op.f('ix_moods_date'), table_name='moods')
    op.drop_table('moods')
    op.drop_index(op.f('ix_diary_entries_id'), table_name='diary_entries')
    op.drop_index(op.f('ix_diary_entries_date'), table_name='diary_entries')
    op.drop_table('diary_entries')
    op.drop_index(op.f('ix_capsules_id'), table_name='capsules')
    op.drop_table('capsules')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_daily_challenges_id'), table_name='daily_challenges')
    op.drop_table('daily_challenges')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
